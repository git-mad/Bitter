Index: app/src/main/java/gitmad/bitter/fragment/FeedFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/gitmad/bitter/fragment/FeedFragment.java	(revision 28aec1a28c7ab1d8f5e62a71687e644fc4a45761)
+++ app/src/main/java/gitmad/bitter/fragment/FeedFragment.java	(revision )
@@ -2,6 +2,9 @@
 
 
 import android.content.Intent;
+import android.database.Cursor;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
 import android.net.Uri;
 import android.os.Bundle;
 import android.os.Environment;
@@ -11,13 +14,17 @@
 import android.support.v4.app.NotificationCompat;
 import android.support.v7.widget.LinearLayoutManager;
 import android.support.v7.widget.RecyclerView;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.Toast;
 
 import java.io.File;
+import java.io.FileNotFoundException;
 import java.io.IOException;
+import java.io.InputStream;
+import java.net.URI;
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Date;
@@ -26,6 +33,7 @@
 import gitmad.bitter.R;
 import gitmad.bitter.activity.ViewPostActivity;
 import gitmad.bitter.data.UserProvider;
+import gitmad.bitter.data.firebase.FirebaseImageProvider;
 import gitmad.bitter.data.mock.MockPostProvider;
 import gitmad.bitter.data.mock.MockUserProvider;
 import gitmad.bitter.model.Post;
@@ -39,6 +47,9 @@
     private RecyclerView.Adapter adapter;
     private RecyclerView.LayoutManager layoutManager;
     private String imagePath;
+    private File takePicPath;
+    private String selectedImagePath;
+    private static final int SELECT_PICTURE = 2;
 
     private MockPostProvider postProvider;
 
@@ -91,9 +102,22 @@
         picFromGallery.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-                startActivity(photoOp);
+                //startActivity(photoOp);
+
+                Intent galleryIntent = new Intent(Intent.ACTION_PICK,
+                        MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
+                //intent.setType("image/*");
+                //intent.setAction(Intent.ACTION_GET_CONTENT);
+                //startActivityForResult(Intent.createChooser(intent,
+                //        "Select Picture"), SELECT_PICTURE);
+                startActivityForResult(galleryIntent, SELECT_PICTURE);
             }
         });
+
+
+
+
+
         textPost.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
@@ -156,6 +180,7 @@
 
     /**
      * Sets listeners for floating action buttons
+     *
      * @param takePic floating action button to set listener to
      */
     private void takePicHandler(FloatingActionButton takePic) {
@@ -163,19 +188,21 @@
         takePic.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);;
+                Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
+                ;
                 if (intent.resolveActivity(getContext().getPackageManager()) != null) {
-                    File file;
                     try {
-                        file = createFile();
+                        takePicPath = createFile();
                     } catch (IOException e) {
-                        file = null;
+                        takePicPath = null;
                     }
-                    if (file != null) {
+                    if (takePicPath != null) {
                         intent.putExtra(MediaStore.EXTRA_OUTPUT,
-                                Uri.fromFile(file));
+                                Uri.fromFile(takePicPath));
                         final int IMAGE_REQUEST_CODE = 1;
+
                         startActivityForResult(intent, IMAGE_REQUEST_CODE);
+
                     }
                 }
             }
@@ -184,18 +211,45 @@
 
     @Override
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(reque);
         if (requestCode == 1) {
             final int resultOk = -1;
             if (resultCode == resultOk) {
                 Toast.makeText(getActivity(), "Image saved.",
                         Toast.LENGTH_LONG).show();
+
+                Bitmap image = BitmapFactory.decodeFile(takePicPath.getAbsolutePath());
+                new FirebaseImageProvider().addImageAsync(image);
                 //image should be accessed here using filename imagePath
             }
+        }else if (requestCode == SELECT_PICTURE && (resultCode == -1) && data != null) {
+            Uri selectedImage = data.getData();
+            String[] filePathColumn = { MediaStore.Images.Media.DATA };
+
+            // Get the cursor
+            Cursor cursor = getContext().getContentResolver().query(selectedImage,
+                    filePathColumn, null, null, null);
+            // Move to first row
+            cursor.moveToFirst();
+
+            int columnIndex = cursor.getColumnIndex(filePathColumn[0]);
+            String imgDecodableString = cursor.getString(columnIndex);
+            cursor.close();
+
+            Bitmap galleryPic = BitmapFactory.decodeFile(imgDecodableString);
+            new FirebaseImageProvider().addImageAsync(galleryPic);
+
+        } else {
+            Toast.makeText(getContext(), "You haven't picked Image",
+                    Toast.LENGTH_LONG).show();
         }
+
+
     }
 
     /**
      * Creates file for saving photo
+     *
      * @return File for saving photo
      * @throws IOException File cannot be created
      */
@@ -211,4 +265,6 @@
         imagePath = "file:" + image.getAbsolutePath();
         return image;
     }
+
+
 }
Index: app/src/main/java/gitmad/bitter/model/FirebaseImage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/gitmad/bitter/model/FirebaseImage.java	(revision 28aec1a28c7ab1d8f5e62a71687e644fc4a45761)
+++ app/src/main/java/gitmad/bitter/model/FirebaseImage.java	(revision )
@@ -73,7 +73,7 @@
     }
 
     private Bitmap getImageDataAsBitmap() {
-        byte [] encodeByte = Base64.decode(imageData, Base64.DEFAULT);
+        byte[] encodeByte = Base64.decode(imageData, Base64.DEFAULT);
         Bitmap bitmap = BitmapFactory.decodeByteArray(encodeByte, 0, encodeByte.length);
         return bitmap;
     }
